input {
    file {
        path => ["/var/log/ovirt-engine/engine.log"]
        codec => multiline {
        pattern => "^%{TIMESTAMP_ISO8601} "
        negate => true
        what => previous
        }
    }
}

filter {
    grok {

        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{GREEDYDATA:file_path}\.%{DATA:command}\] \(%{DATA:component}\)%{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{GREEDYDATA:file_path}\.%{DATA:command}\] \(%{DATA:component}\)%{GREEDYDATA}16 more%{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{DATA:file_path}\] \(%{DATA:component}\) \[%{DATA:flow_id}\] Running command: %{DATA:command} %{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{GREEDYDATA:file_path}\.%{DATA:command}\] \(%{DATA:component}\) \[%{DATA:flow_id}\] Lock %{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{GREEDYDATA:file_path}\.%{DATA:command}\] \(%{DATA:component}\) \[%{DATA:flow_id}\] Correlation ID: %{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{DATA:file_path}\] \(%{DATA:command}\) Correlation ID: %{DATA:flow_id},%{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{DATA:file_path}\] \(%{DATA:component}\) \[%{DATA:flow_id}\] %{DATA:command_status}, %{DATA:command}\(%{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{DATA:file_path}\] \(%{DATA:component}\) \[%{DATA:flow_id}\] %{DATA:command_status}, %{DATA:command},%{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{DATA:file_path}\] \(%{DATA:component}\) \[%{DATA:flow_id}\] %{DATA:command} \[%{GREEDYDATA}"]
        match => ["message", "%{DATA},%{DATA} %{DATA:message_type} \[%{GREEDYDATA:file_path}\.%{DATA:command}\] \(%{DATA:thread}\)%{GREEDYDATA}"]
        match => ["message", ", shared%{DATA:command}= \]"]
        tag_on_failure => ["failed"]
    }
    if [command] == "Locks" {
        mutate {
            add_field => { "message_type" => "INFO" }
        }
    }
    if "failed" in [tags] {
        mutate {
            add_field => { "message_type" => "EXCEPTION" }
        }
    }

}
output {
    elasticsearch {
        hosts => ["10.35.161.34"]
        protocol => "http"
    }
}
